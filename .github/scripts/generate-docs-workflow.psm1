# Disable PSUseSingularNouns

function Format-AutoGeneratedMarkdownFiles {
  [CmdletBinding()]
  param ([string]$Version)

  foreach ($File in Get-ChildItem ./docs/helpers/*.md) {
    # Add front matter
    $Frontmatter = ""
    $FrontMatter += "---`r`n"
    $FrontMatter += "WARNING: `"PLEASE DO NOT MODIFY THIS FILE, IT'LL BE OVERWRITTEN`"`r`n"
    $FrontMatter += "layout: `"../../layouts/main.astro`"`r`n"
    $FrontMatter += "title: `"$($File.BaseName)`"`r`n"
    $FrontMatter += "module: `"BenchPress.Azure`"`r`n"
    $FrontMatter += "version: `"$Version`"`r`n"
    $FrontMatter += "updatedOn: `"$(Get-Date -Format "yyyy-MM-dd HH:mm K")`"`r`n"
    $FrontMatter += "---`r`n"
    # Fix escaping issues
    $Content = Get-Content $File -Raw
    $Content = $Content -Replace '\\`', '`'
    $Content = $Content -Replace "\\\[", "["
    $Content = $Content -Replace "\\\]", "]"
    # Fix syntax highlighting
    $Lines = $Content -Split "`r`n"
    for ($i = 0; $i -lt $Lines.Length; $i++) {
      if ($Lines[$i] -match "^## SYNTAX") {
        $j = $i + 2
        if ($Lines[$j] -match '```') {
          $Lines[$j] = $Lines[$j] -Replace '```', '```powershell'
        }
      }
    }
    # Write out the file back
    Set-Content $File ($FrontMatter + ($Lines -join "`r`n"))
  }
}
