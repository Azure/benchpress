<!-- Policy configuration for the API. Explore other sample policies at https://learn.microsoft.com/en-us/azure/api-management/policies/ -->
<policies>
    <inbound>
        <base />
        <!-- This policy is needed to handle preflight requests using the OPTIONS method. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-cross-domain-policies  -->
        <cors allow-credentials="false">
            <allowed-origins>
                <origin>*</origin>
            </allowed-origins>
            <allowed-methods>
                <method>PUT</method>
                <method>GET</method>
                <method>POST</method>
                <method>DELETE</method>
                <method>PATCH</method>
            </allowed-methods>
            <allowed-headers>
                <header>*</header>
            </allowed-headers>
            <expose-headers>
                <header>*</header>
            </expose-headers>
        </cors>
    </inbound>
    <backend>
        <limit-concurrency key="@(context.Request.IpAddress)" max-count="3">
            <forward-request timeout="120" />
        </limit-concurrency>
    </backend>
    <outbound>
        <base />
        <!-- Optional policy to to send custom metrics to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#emit-metrics -->
        <choose>
            <when condition="@(context.Response.StatusCode &gt;= 200 &amp;&amp; context.Response.StatusCode &lt; 300)">
                <emit-metric name="Successful requests" value="1" namespace="apim-metrics">
                    <dimension name="API" value="@(context.Api.Name)" />
                    <dimension name="Client IP" value="@(context.Request.IpAddress)" />
                    <dimension name="Status Code" value="@((String)context.Response.StatusCode.ToString())" />
                    <dimension name="Status Reason" value="@(context.Response.StatusReason)" />
                </emit-metric>
            </when>
            <when condition="@(context.Response.StatusCode &gt;= 400 &amp;&amp; context.Response.StatusCode &lt; 600)">
                <emit-metric name="Failed requests" value="1" namespace="apim-metrics">
                    <dimension name="API" value="@(context.Api.Name)" />
                    <dimension name="Client IP" value="@(context.Request.IpAddress)" />
                    <dimension name="Status Code" value="@(context.Response.StatusCode.ToString())" />
                    <dimension name="Status Reason" value="@(context.Response.StatusReason)" />
                    <dimension name="Error Source" value="backend" />
                </emit-metric>
            </when>
        </choose>
    </outbound>
    <on-error>
        <base />
        <emit-metric name="Failed requests" value="1" namespace="apim-metrics">
            <dimension name="API" value="@(context.Api.Name)" />
            <dimension name="Client IP" value="@(context.Request.IpAddress)" />
            <dimension name="Status Code" value="500" />
            <dimension name="Status Reason" value="@(context.LastError.Reason)" />
            <dimension name="Error Source" value="gateway" />
        </emit-metric>
    </on-error>
</policies>
