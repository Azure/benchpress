{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.16.1.55165",
      "templateHash": "3534936720939216847"
    }
  },
  "parameters": {
    "serviceName": {
      "type": "string",
      "defaultValue": "[format('apim{0}', take(uniqueString(resourceGroup().id), 5))]"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "apiName": {
      "type": "string",
      "defaultValue": "[format('api{0}', take(uniqueString(resourceGroup().id), 5))]"
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "[format('logworkspace{0}', take(uniqueString(resourceGroup().id), 5))]"
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('appinsights{0}', take(uniqueString(resourceGroup().id), 5))]"
    },
    "loggerName": {
      "type": "string",
      "defaultValue": "[format('log{0}', take(uniqueString(resourceGroup().id), 5))]"
    },
    "diagnosticName": {
      "type": "string",
      "defaultValue": "applicationinsights"
    },
    "policyName": {
      "type": "string",
      "defaultValue": "policy"
    }
  },
  "variables": {
    "$fxv#0": "<!-- Policy configuration for the API. Explore other sample policies at https://learn.microsoft.com/en-us/azure/api-management/policies/ -->\n<policies>\n    <inbound>\n        <base />\n        <!-- This policy is needed to handle preflight requests using the OPTIONS method. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-cross-domain-policies  -->\n        <cors allow-credentials=\"false\">\n            <allowed-origins>\n                <origin>*</origin>\n            </allowed-origins>\n            <allowed-methods>\n                <method>PUT</method>\n                <method>GET</method>\n                <method>POST</method>\n                <method>DELETE</method>\n                <method>PATCH</method>\n            </allowed-methods>\n            <allowed-headers>\n                <header>*</header>\n            </allowed-headers>\n            <expose-headers>\n                <header>*</header>\n            </expose-headers>\n        </cors>\n    </inbound>\n    <backend>\n        <limit-concurrency key=\"@(context.Request.IpAddress)\" max-count=\"3\">\n            <forward-request timeout=\"120\" />\n        </limit-concurrency>\n    </backend>\n    <outbound>\n        <base />\n        <!-- Optional policy to to send custom metrics to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#emit-metrics -->\n        <choose>\n            <when condition=\"@(context.Response.StatusCode &gt;= 200 &amp;&amp; context.Response.StatusCode &lt; 300)\">\n                <emit-metric name=\"Successful requests\" value=\"1\" namespace=\"apim-metrics\">\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n                    <dimension name=\"Status Code\" value=\"@((String)context.Response.StatusCode.ToString())\" />\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\n                </emit-metric>\n            </when>\n            <when condition=\"@(context.Response.StatusCode &gt;= 400 &amp;&amp; context.Response.StatusCode &lt; 600)\">\n                <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n                    <dimension name=\"Status Code\" value=\"@(context.Response.StatusCode.ToString())\" />\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\n                    <dimension name=\"Error Source\" value=\"backend\" />\n                </emit-metric>\n            </when>\n        </choose>\n    </outbound>\n    <on-error>\n        <base />\n        <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\n            <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n            <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n            <dimension name=\"Status Code\" value=\"500\" />\n            <dimension name=\"Status Reason\" value=\"@(context.LastError.Reason)\" />\n            <dimension name=\"Error Source\" value=\"gateway\" />\n        </emit-metric>\n    </on-error>\n</policies>\n"
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2022-08-01",
      "name": "[parameters('serviceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "capacity": 1,
        "name": "Developer"
      },
      "properties": {
        "publisherEmail": "email@contoso.com",
        "publisherName": "Contoso"
      }
    },
    {
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', parameters('serviceName'), parameters('apiName'))]",
      "properties": {
        "displayName": "api",
        "path": "/",
        "protocols": [
          "https"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/loggers",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', parameters('serviceName'), parameters('loggerName'))]",
      "properties": {
        "credentials": {
          "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
        },
        "loggerType": "applicationInsights"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]",
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/diagnostics",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}', parameters('serviceName'), parameters('diagnosticName'))]",
      "properties": {
        "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('serviceName'), parameters('loggerName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', parameters('serviceName'))]",
        "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('serviceName'), parameters('loggerName'))]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2022-08-01",
      "name": "[format('{0}/{1}/{2}', parameters('serviceName'), parameters('apiName'), parameters('policyName'))]",
      "properties": {
        "format": "rawxml",
        "value": "[variables('$fxv#0')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('serviceName'), parameters('apiName'))]"
      ]
    }
  ]
}
